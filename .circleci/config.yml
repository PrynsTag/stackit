---
version: 2.1

orbs:
  python: circleci/python@1.4
  jira: circleci/jira@1.3.1

jobs:
  test:
    docker:
      - image: cimg/python:3.9
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    parallelism: 4
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run Django Test
          command: |
            base64 -di \<<< $CLOUD_STORAGE_KEY >> /home/circleci/project/key.json
            export GOOGLE_APPLICATION_CREDENTIALS=/home/circleci/project/key.json
            coverage run ./manage.py test -v 2 --parallel
            coverage run ./manage.py check --deploy
      - run:
          name: Run Coverage Report
          command: |
            mkdir -p test-results
            coverage report
            coverage html -d test-results/coverage.html
            coverage xml -o test-results/unittest/unittest.xml
            coveralls
      - store_test_results:
          path: test-results/unittest
      - store_artifacts:
          path: test-results
          destination: tr1

  build:
    docker:
      - image: cimg/python:3.9
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    parallelism: 4
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Collect Static and Make Migration
          command: |
            base64 -di \<<< $CLOUD_STORAGE_KEY >> /home/circleci/project/key.json
            export GOOGLE_APPLICATION_CREDENTIALS=/home/circleci/project/key.json
            ./manage.py collectstatic --no-input
            ./manage.py makemigrations
            ./manage.py migrate

  deploy-to-staging:
    docker:
      - image: google/cloud-sdk
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Copy across app.yaml config
          command: ./app.yaml.sh > ./app.yaml
      - run:
          name: Set up gcloud config
          command: |
            echo $GCLOUD_AUTH_KEY | base64 -di | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: Deploying to App Engine Staging
          command: gcloud app deploy --no-promote app.yaml

  deploy-to-prod:
    docker:
      - image: google/cloud-sdk
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Deploying to App Engine Production
          command: gcloud app deploy app.yaml

workflows:
  build-test-deploy:
    jobs:
      - test:
          context:
            - docker
          post-steps:
            - jira/notify
      - build:
          context:
            - docker
          post-steps:
            - jira/notify
          requires:
            - test
      - deploy-to-staging:
          context:
            - docker
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - master
                - develop
          post-steps:
            - jira/notify
      - approve-prod-deployment:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - deploy-to-staging
          post-steps:
            - jira/notify
      - deploy-to-prod:
          context:
            - docker
          requires:
            - approve-prod-deployment
          filters:
            branches:
              only: master
          post-steps:
            - jira/notify
